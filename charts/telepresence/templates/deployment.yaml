{{- if not .Values.rbac.only }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "telepresence.fullname" . }}
  namespace: {{ include "telepresence.namespace" . }}
  labels:
    {{- include "telepresence.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "telepresence.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "telepresence.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.image.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ include "telepresence.fullname" . }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.registry }}/{{ .Values.image.name }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          - name: LOG_LEVEL
            value: {{ .Values.logLevel }}
          - name: POD_CIDR_STRATEGY
            value: {{ .Values.podCIDRStrategy }}
          - name: DNS_SERVICE_NAME
            value: {{ .Values.dnsServiceName }}
          - name: DNS_SERVICE_NAMESPACE
            value: {{ .Values.dnsServiceNamespace }}
          - name: DNS_SERVICE_IP
            value: {{ .Values.dnsServiceIP }}
          {{- with .Values.podCIDRs }}
          - name: POD_CIDRS
            value: "{{ join " " . }}"
          {{- end }}
          - name: SYSTEMA_HOST
            value: {{ .Values.systemaHost }}
          - name: SYSTEMA_PORT
            value: {{ .Values.systemaPort | quote }}
          - name: TELEPRESENCE_REGISTRY
            value: {{ .Values.agentInjector.agentImage.registry }}
          {{- with .Values.tracing }}
          {{ if .grpcPort }}
          - name: TELEPRESENCE_GRPC_TRACE_PORT
            value: {{ .grpcPort | quote }}
          {{- end }}
          {{- end }}
          {{- with .Values.telepresenceAPI }}
          {{- if .port }}
          - name: TELEPRESENCE_API_PORT
            value: {{ .port | quote }}
          {{- end }}
          {{- end }}
          {{- if .Values.grpc }}
          {{- if .Values.grpc.maxReceiveSize }}
          - name: TELEPRESENCE_MAX_RECEIVE_SIZE
            value: {{ .Values.grpc.maxReceiveSize }}
          {{- end }}
          {{- end }}
          {{ if .Values.agentInjector.agentImage.name }}
          - name: TELEPRESENCE_AGENT_IMAGE
            value: "{{ .Values.agentInjector.agentImage.name }}:{{ .Values.agentInjector.agentImage.tag | default .Chart.AppVersion }}"
          {{- end }}
          {{- if .Values.prometheus.port }}  # 0 is false
          - name: PROMETHEUS_PORT
            value: "{{ .Values.prometheus.port }}"
          {{- end }}
          - name: TELEPRESENCE_APP_PROTO_STRATEGY
            value: {{ .Values.agentInjector.appProtocolStrategy }}
          - name: AGENT_INJECT_POLICY
            value: {{ .Values.agentInjector.injectPolicy }}
          - name: MANAGER_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: TELEPRESENCE_MANAGER_POD_IP
            valueFrom:
              fieldRef:
                apiVersion : v1
                fieldPath: status.podIP
          {{- if .Values.managerRbac.namespaced }}
          {{- with .Values.managerRbac.namespaces }}
          - name: MANAGED_NAMESPACES
            value: "{{ join " " . }}"
          {{- end }}
          {{- end }}
          ports:
          - name: api
            containerPort: 8081
          - name: https
            containerPort: 8443
          {{- if .Values.prometheus.port }}  # 0 is false
          - name: prometheus
            containerPort: {{ .Values.prometheus.port }}
          {{- end }}
          {{- with .Values.tracing }}
          - name: grpc-trace
            containerPort: {{ .grpcPort }}
          {{- end }}
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
          {{- if .Values.licenseKey.create }}
          - name: license
            mountPath: /home/telepresence
            readOnly: true
          {{- end }}
          {{- if .Values.httpsProxy.rootCATLSSecret }}
          - name: proxy-ca
            mountPath: /var/run/secrets/proxy_tls
            readOnly: true
          {{- end }}
          - name: tls
            mountPath: /var/run/secrets/tls
            readOnly: true
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.priorityClassName }}
      priorityClassName: {{ . | quote }}
      {{- end }}
      volumes:
      {{- if .Values.licenseKey.create }}
      - name: license
        secret:
          defaultMode: 420
          secretName: {{ .Values.licenseKey.secret.name }}
      {{- end }}
      {{- if .Values.httpsProxy.rootCATLSSecret }}
      - name: proxy-ca
        secret:
          defaultMode: 420
          secretName: {{ .Values.httpsProxy.rootCATLSSecret }}
      {{- end }}
      - name: tls
        secret:
          defaultMode: 420
          secretName: {{ .Values.agentInjector.secret.name }}
      serviceAccount: traffic-manager
      serviceAccountName: traffic-manager
{{- end }}
