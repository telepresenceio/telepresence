name: "Prepare Kluster"
description: "Provision a kluster"
inputs:
  platform:
    description: "The platform the kluster will be running tests for"
    required: true
  token:
    description: "The kubeception token to use"
    required: true
  tel-image:
    description: "Path to the image to load onto the cluster"
    required: true
outputs:
  kubeconfig:
    description: "The resulting kubeconfig file"
    value: ${{ steps.kubeconfig.outputs.KUBECONFIG }}
runs:
  using: composite
  steps:
    - name: Get KUBECONFIG path
      id: kubeconfig
      shell: bash
      run: |
        KUBECONFIG=$HOME/kubeconfig
        if [[ "${{ inputs.platform }}" == "windows" ]]; then
          # With thanks to stack overflow (https://stackoverflow.com/a/13701495) for showing how to convert a unix path to a windows path
          KUBECONFIG=$(echo $KUBECONFIG | sed -e 's/^\///' -e 's/\//\\/g' -e 's/^./\0:/')
        fi
        echo "KUBECONFIG=$KUBECONFIG" >> $GITHUB_OUTPUT
    - name: Create kluster
      uses: datawire/infra-actions/provision-cluster@v0.2.0
      if: steps.get_last_run.outputs.passed != 'success'
      with:
        distribution: kubeception
        version: 1.19
        kubeconfig: "${{ steps.kubeconfig.outputs.KUBECONFIG }}"
        kubeceptionToken: ${{ inputs.token }}
    - name: Load image
      shell: bash
      env:
        KUBECONFIG: "${{ steps.kubeconfig.outputs.KUBECONFIG }}"
      run: |
        kubectl apply -f build-aux/image-importer.yaml
        kubectl rollout status -w deployment/image-importer
        POD_NAME=$(kubectl get pod -ojsonpath='{.items[0].metadata.name}' -l app=image-importer)
        kubectl cp "${{ inputs.tel-image }}" "$POD_NAME:/tmp/image.tar"
        kubectl exec $POD_NAME -- //hostbin/ctr images import //tmp/image.tar
