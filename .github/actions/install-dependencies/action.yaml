name: "Install dependencies"
description: "Install dependencies required by the runner"
runs:
  using: composite
  steps:
    - uses: actions/setup-go@v5
      with:
        go-version: stable
    - uses: azure/setup-kubectl@v3
      id: kubectl
    - if: runner.os == 'Linux'
      name: install Linux dependencies
      shell: bash
      run: |
        sudo rm -f /etc/apt/sources.list.d/google-chrome.list
        sudo apt-get update
        sudo apt-get install -y sshfs socat libfuse-dev make jq
        sudo sh -c 'echo user_allow_other >> /etc/fuse.conf'

        if [[ ${RUNNER_ARCH} == "ARM64" ]]; then
          sudo apt-get install -y gcc-aarch64-linux-gnu binutils-aarch64-linux-gnu
        fi
    - if: runner.os == 'macOS'
      name: install macOS dependencies
      shell: bash
      env:
        HOMEBREW_NO_INSTALL_FROM_API: ""
        HOMEBREW_NO_INSTALLED_DEPENDENTS_CHECK: "1"
      run: |
        brew untap homebrew/core || :
        brew untap homebrew/cask || :

        # Remove Python3 symlinks in /usr/local/bin as workaround to brew update issues
        # https://github.com/actions/setup-python/issues/577
        rm /usr/local/bin/2to3* || :
        rm /usr/local/bin/idle3* || :
        rm /usr/local/bin/pydoc* || :
        rm /usr/local/bin/python3* || :

        brew update
        brew install --cask macfuse
        brew install gromgit/fuse/sshfs-mac
        brew link --overwrite sshfs-mac

        if [[ ${RUNNER_ARCH} == "ARM64" ]]; then
          brew install jq
        fi
    - if: runner.os == 'Windows'
      name: install make and zip
      uses: nick-fields/retry/@v3
      with:
        max_attempts: 3
        timeout_minutes: 1
        shell: powershell
        command: choco install make zip
    - if: runner.os == 'Windows'
      name: download winfsp
      uses: nick-fields/retry/@v3
      with:
        max_attempts: 3
        timeout_minutes: 1
        shell: bash
        command: make winfsp.msi
    - if: runner.os == 'Windows'
      name: download sshfs
      uses: nick-fields/retry/@v3
      with:
        max_attempts: 3
        timeout_minutes: 1
        shell: bash
        command: make sshfs-win.msi
    - if: runner.os == 'Windows'
      name: download sshfs
      uses: nick-fields/retry/@v3
      with:
        max_attempts: 3
        timeout_minutes: 1
        shell: bash
        command: make wintun.dll
    - if: runner.os == 'Windows'
      name: install winfsp and sshfs
      shell: powershell
      run: |
        Start-Process msiexec -Wait -verb runAs -Args "/i build-output\\winfsp.msi /passive /qn /L*V winfsp-install.log"
        Start-Process msiexec -Wait -verb runAs -Args "/i build-output\\sshfs-win.msi /passive /qn /L*V sshfs-win-install.log"

        [Environment]::SetEnvironmentVariable("Path", "C:\\;C:\\Program Files\\SSHFS-Win\\bin;$ENV:Path", "Machine")
