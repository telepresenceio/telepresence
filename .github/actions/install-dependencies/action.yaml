name: "Install dependencies"
description: "Install dependencies required by the runner"
inputs:
  runner-version:
    description: "The os and version of the runner used to execute the tests"
    required: true
runs:
  using: composite
  steps:
    - uses: actions/setup-go@v3
      with:
        go-version: '1.19'
    - uses: azure/setup-kubectl@v3.0
      with:
        version: 'v1.25.3'
      id: kubectl
    - if: inputs.runner-version == 'ubuntu-latest'
      name: install ${{ inputs.runner-version }} dependencies
      shell: bash
      run: |
        sudo rm -f /etc/apt/sources.list.d/google-chrome.list
        sudo apt-get update
        sudo apt-get install -y sshfs socat
        sudo sh -c 'echo user_allow_other >> /etc/fuse.conf'
    - if: inputs.runner-version == 'macos-latest'
      name: install ${{ inputs.runner-version }} dependencies
      shell: bash
      run: |
        brew update
        brew install --cask macfuse
        brew install gromgit/fuse/sshfs-mac
        brew link --overwrite sshfs-mac
    - if: inputs.runner-version == 'windows-2019'
      name: install ${{ inputs.runner-version }} dependencies
      shell: powershell
      run: |
        choco install make
        
        # Download sshfs
        curl -o winfsp.msi https://github.com/billziss-gh/winfsp/releases/download/v1.11/winfsp-1.11.22176.msi
        curl -o sshfs-win.msi https://github.com/billziss-gh/sshfs-win/releases/download/v3.7.21011/sshfs-win-3.7.21011-x64.msi

        Start-Process msiexec -Wait -verb runAs -Args "/i winfsp.msi /passive /qn /L*V winfsp-install.log"
        Start-Process msiexec -Wait -verb runAs -Args "/i sshfs-win.msi /passive /qn /L*V sshfs-win-install.log"
        
        [Environment]::SetEnvironmentVariable("Path", "C:\\;C:\\Program Files\\SSHFS-Win\\bin;$ENV:Path", "Machine")
